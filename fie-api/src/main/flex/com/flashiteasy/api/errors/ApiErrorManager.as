/**
 * FLASHITEASY API 1.0 : Framework for visual interactive developpement <http://www.flashiteasy.com/>
 *
 * FLASHITEASY API 1.0 is (c) 2008-2011 by Robert DEVOS, Didier REYT, Gilles ROQUEFEUIL & Dany SIRIPHOL
 * This software is released under the MIT License <http://www.opensource.org/licenses/mit-license.php/>
 * 
 *
 */

package com.flashiteasy.api.errors
{
	import com.flashiteasy.api.events.FieEvent;
	
	import flash.events.Event;
	import flash.events.EventDispatcher;

	/**
	 * The <code><strong>ApiErrorManager</strong></code> handles
	 * the special errors generated by API : a story that lacks target,
	 * an action that lacks trigger, ...
	 * <br />
	 * As a pseudo-singleton class, it must be called using
	 * the <code><strong>ApiErrorManager.getInstance()</strong></code> syntax.
	 */
	public class ApiErrorManager extends EventDispatcher
	{
		private static var _instance:ApiErrorManager;
		protected static var apiErrorEventsArray:Array = new Array;
		
		/**
		 * Singleton implementation
		 * @default false
		 */
		protected static var allowInstantiation : Boolean = false;

		/**
		 * 
		 * @return ApiErrorManager instance.
		 */
		public static function getInstance() : ApiErrorManager
		{
			if( _instance == null )
			{
				allowInstantiation = true;
				_instance = new ApiErrorManager();
				allowInstantiation = false;
			} 
			return _instance;
		}
		
		/**
		 * 
		 * constructor
		 * 
		 * */
		
		public function ApiErrorManager()
		{			
		}
		
		public override function dispatchEvent( e : Event) : Boolean
		{
			ApiErrorManager.apiErrorEventsArray.push(e);
			return super.dispatchEvent(e);
		}
		
		public static function listApiErrorEvents( ) : Array
		{
			return apiErrorEventsArray;	
		}
		
		public static function getLastApiErrorEvent() : FieEvent
		{
			return apiErrorEventsArray[apiErrorEventsArray.length-1];
		}
	}
}
