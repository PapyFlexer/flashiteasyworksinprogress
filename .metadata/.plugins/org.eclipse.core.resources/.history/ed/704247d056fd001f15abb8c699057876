<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				layout="absolute"
				paddingTop="0"
				paddingLeft="0"
				applicationComplete="init(event)"
				preloader="com.flashiteasy.admin.customLoader.Preloader"
				xmlns:components="com.flashiteasy.admin.components.*"
				xmlns:manager="com.flashiteasy.admin.manager.*"
				xmlns:menu="com.flashiteasy.admin.uicontrol.menu.*"
				xmlns:uicontrol="com.flashiteasy.admin.uicontrol.*" xmlns:story="com.flashiteasy.admin.uicontrol.story.*" currentState="site" xmlns:code="http://code.google.com/p/flexlib/">

	<mx:Style source="style.css"/>
    	
    	<mx:Script>
		<![CDATA[
			import com.flashiteasy.admin.workbench.impl.StoryElementEditorImpl;
			import com.flashiteasy.admin.workbench.impl.DefaultElementEditorImpl;
			import com.flashiteasy.admin.workbench.IElementEditor;
			import com.flashiteasy.admin.workbench.impl.ViewElementEditorImpl;
			import mx.controls.Tree;
			import mx.collections.ArrayCollection;
			import mx.controls.ComboBox;
			import com.flashiteasy.api.indexation.IndexationManager;
			import com.flashiteasy.admin.visualEditor.VisualSelector;
			import com.flashiteasy.api.bootstrap.AbstractBootstrap;
			import mx.events.ItemClickEvent;
			import com.flashiteasy.admin.conf.Conf;
			import com.flashiteasy.api.core.BrowsingManager;
			import com.flashiteasy.admin.manager.LanguageManager;
			import com.flashiteasy.admin.ApplicationController;
			import com.flashiteasy.admin.conf.Ref;
			import com.flashiteasy.admin.manager.AdminManager;
			import com.flashiteasy.api.core.IParameterSet;


			/**
			 * Initialize all referenced object for the admin application
			 */
			private function init(e:Event):void
			{
				Ref.adminManager=new AdminManager();
				Ref.workspaceContainer=workspaceContainer;
				Ref.editorContainer=editorContainer;
				Ref.controlContainer=controlContainer;
				Ref.actionContainer=actionContainer;
				Ref.stageTimeLine=this.stageTimeLine;
				Ref.timelineComponent=timelineContainer;
				Ref.storyContainer=storyContainer;
				Ref.controlList=controlList;
				Ref.actionList=actionList;
				Ref.ADMIN_STAGE=stage;
				Ref.ADMIN_STAGE.addEventListener(KeyboardEvent.KEY_DOWN, Ref.adminManager.keyDown);
				actions.label=Conf.languageManager.getLanguage('Actions');
				controls.label=Conf.languageManager.getLanguage('Elements');
				Controls.groupname=Conf.languageManager.getLanguage('Controls');
			}
			
			private function toggleStatesButtonBar_itemClick(evt:ItemClickEvent):void {
				
				currentState = evt.item.data;
				changeState();
				
            }
            
            public function changeState():void
            {
            	VisualSelector.getInstance().flushElements();
				Ref.adminManager.changedParameterList=null;
				Ref.adminManager.changedDescriptor = null;
				var editor :IElementEditor;
				if( currentState =="stories")
				{
					if(toggleButtonBar.selectedIndex != 2)
						toggleButtonBar.selectedIndex = 2;
					Ref.adminManager.changedParameterList=null;
					Ref.adminManager.changedDescriptor = null;
					//AbstractBootstrap.getInstance().getTimerStoryboardPlayer().stop(BrowsingManager.getInstance().getCurrentPage().getStoryboard());
					
					
					editor=new StoryElementEditorImpl();
					ApplicationController.getInstance().changeElementEditor(editor);
					Ref.stageTimeLine.init();
					Controls.enabled=false;
					ApplicationController.getInstance().getBlockList().getTree().dragEnabled = false;
					
					ApplicationController.getInstance().getBlockList().getTree().enabled = true;
					//Ref.controlList.dragEnabled=false;
				}
				else if( currentState == "site")
				{
					
					if(toggleButtonBar.selectedIndex != 1)
						toggleButtonBar.selectedIndex = 1;
					editor=new DefaultElementEditorImpl;
					ApplicationController.getInstance().changeElementEditor(editor);
					Controls.enabled=true;
					ApplicationController.getInstance().getBlockList().getTree().dragEnabled = true;
					ApplicationController.getInstance().getBlockList().getTree().enabled = true;
					//Ref.controlList.dragEnabled=true;
					//Ref.stageTimeLine.autoAnimToEnd();
				}
				else
				{
					
					if(toggleButtonBar.selectedIndex != 0)
						toggleButtonBar.selectedIndex = 0;
					Controls.enabled=false;
					ApplicationController.getInstance().getBlockList().getTree().dragEnabled = false;
					ApplicationController.getInstance().getBlockList().getTree().enabled = false;
					editor=new ViewElementEditorImpl();
					ApplicationController.getInstance().changeElementEditor(editor);
					//AbstractBootstrap.getInstance().getTimerStoryboardPlayer().reset(BrowsingManager.getInstance().getCurrentPage().getStoryboard());
					
				}
            	
            }
            
			private function hideWhiteBox(e:Event) :void
			{
				var wBox:DisplayObject = e.target.rawChildren.getChildByName("whiteBox");
				wBox.visible = false;
			}
			
			private function checkScrollBar(e:Event) :void
			{
				if(VBox(e.target).verticalScrollBar)
				{
					var children:Array = VBox(e.target).getChildren();
					for each(var child:ControlGroupPanel in children)
					{
						child.width=180;
						child.maxWidth=180;
						child.validateNow();
						child.invalidateProperties();
					}
				}
			}
			
			public function getLang(s:String):String
			{

				return Conf.languageManager.getLanguage(s);
			}
			
			[Bindable]
			private var percentSize:ArrayCollection=new ArrayCollection([{label: "100%", data: 1}, {label: "75%", data: 0.75}, {label: "50%", data: 0.5}, {label: "25%", data: 0.25}, {label: "150%", data: 1.5}, {label: "200%", data: 2}]);
			
			private function changeSiteSize(e:Event):void
			{
				workspaceContainer.scaleX = ComboBox(e.target).selectedItem.data;
				workspaceContainer.scaleY = ComboBox(e.target).selectedItem.data;
				if(VisualSelector.getInstance().tool != null)
				{
				var actualTarget:DisplayObject = VisualSelector.getInstance().tool.target;
				VisualSelector.getInstance().tool.target = actualTarget;
				}
			}
		]]>
	</mx:Script>

	<mx:states >
		<mx:State name="view">
		</mx:State>
        <mx:State name="site">
        	<mx:AddChild relativeTo="{siteEdit}" creationPolicy="all">
            	<uicontrol:DepthSwapperMenu/>
            </mx:AddChild>
            <mx:AddChild relativeTo="{siteEditorVBox}" creationPolicy="all">
            	<mx:HBox styleName="secondaryContainer"
						 id="actionContainer"
						 height="50"
						 width="100%"/>
            </mx:AddChild>
            	
        </mx:State>
         <mx:State name="stories" >
            <mx:AddChild relativeTo="{siteEditorVBox}" creationPolicy="all">
                <components:StageTimeLine id="stageTimeLine" name="stageTL" />
            </mx:AddChild>
             <mx:AddChild relativeTo="{siteEditorVBox}" creationPolicy="all">
            	<story:TimelineContainer id="timelineContainer" />
            </mx:AddChild>
   		
        </mx:State>
    </mx:states>
		<mx:Array id="statesDP">
	        <mx:Object data="view" label="{getLang('View_Site')}" />
	        <mx:Object data="site" label="{getLang('Site_Editor')}" />
	        <mx:Object data="stories" label="{getLang('Story_Editor')}" />
    	</mx:Array>	
	<mx:VBox width="100%" 
			 height="100%"
			 id="mainVBox"
			 top="0"
			 paddingLeft="0"
			 paddingTop="0"
			 verticalGap="0">

		<menu:MainMenu width="100%"/>
		<mx:HDividedBox width="100%"
						top="0"
						paddingLeft="0"
						paddingTop="0"
						height="100%">

			<!-- LEFT PANEL -->
			<mx:VBox top="0"
					 bottom="0"
					 left="0"
					 width="204"
					 height="100%"
					 styleName="secondaryContainer"
					 verticalGap="0"
					 id="controlContainer">
				<uicontrol:ControlGroupPanel id="Controls"
											 opened="false">
					<mx:TabNavigator id="tabBar"
									 width="200"
									 creationPolicy="all">
						<mx:Canvas id="controls"
								   width="100%"
								   top="0"
								   paddingTop="0">
							<components:CustomDragList id="controlList"
													   paddingTop="0"
													   top="0"
													   width="100%"/>
						</mx:Canvas>
						<mx:Canvas 
								   id="actions"
								   width="100%"
								   top="0"
								   paddingTop="0">
							<components:CustomDragList id="actionList"
													   paddingTop="0"
													   top="0"
													   width="100%"/>
						</mx:Canvas>
					</mx:TabNavigator>
				</uicontrol:ControlGroupPanel>
			</mx:VBox>

			<!-- SITE EDITOR -->
			<mx:VBox id="siteEditorVBox" width="100%"
					 height="100%" horizontalScrollPolicy="off">
				
			<uicontrol:AdvancedPanel id="siteEdit" headerHeight="30"
						  width="100%"
						  height="100%"
						  title="{getLang('Site_Layout')}" horizontalScrollPolicy="on" verticalScrollPolicy="on" creationComplete="hideWhiteBox(event)"
						  layout="absolute">
					<uicontrol:titleBarChildren >
						<mx:ComboBox id="sizer" dataProvider="{percentSize}" change="changeSiteSize(event)" />
						<mx:TabBar id="toggleButtonBar"
            				    dataProvider="{statesDP}"
             				    itemClick="toggleStatesButtonBar_itemClick(event);"
            				    creationPolicy="all"
       					/>
       					
					</uicontrol:titleBarChildren>
					<mx:Canvas styleName="workbench"
 							   id="workspaceContainer">
					</mx:Canvas>
					
				</uicontrol:AdvancedPanel>
					<mx:HDividedBox  width="100%">
						<mx:HBox styleName="secondaryContainer"
								 id="storyContainer"
								 height="55"
								  minWidth="600"/>
						
						<mx:VBox horizontalAlign="right" width="120">
							<story:AddStoryEditor />
						</mx:VBox>
					</mx:HDividedBox>
			</mx:VBox>

			<!-- RIGHT PANEL -->
			<mx:VBox top="0"
					 bottom="0"
					 right="0"
					 left="0"
					 horizontalScrollPolicy="off"
					 paddingLeft="0"
					 paddingTop="0"
					 width="304"
					 height="100%"
					 verticalGap="0"
					 styleName="secondaryContainer"
					 id="editorContainer">
			</mx:VBox>
		</mx:HDividedBox>
	</mx:VBox>
</mx:Application>
